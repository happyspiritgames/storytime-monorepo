swagger: "2.0"
info:
  title: Choose Your Destiny API
  description: Service that manages choose-your-own-adventure style stories. This API handles retrieval of published stories as well as creation and updates to stories in draft mode.  Draft stories can also be published using this API.
  termsOfService: 'http://www.ajegames.com/blog/terms-of-use/'
  contact:
    name: AJE Games Support
    url: 'http://www.ajegames.com/blog/support/'
    email: support@ajegames.com
  version: 0.4.0
host: localhost:10010
basePath: /v1
schemes:
  # tip: remove http to make production-grade
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /status:
    x-swagger-router-controller: status
    get:
      description: Poke the service for its status.
      tags:
        - admin
      operationId: getStatus
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Status"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /stories:
    x-swagger-router-controller: stories
    get:
      description: Get all story summaries of published stories.
      tags:
        - story
      operationId: getLatestPublishedStories
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetStoriesResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a new story in draft mode, ready for editing.
      tags:
        - story
      operationId: createStory
      parameters:
        - name: story
          in: body
          description: Story summary
          required: true
          schema:
            $ref: '#/definitions/StorySummaryUpdate'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StorySummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /stories/{key}:
    x-swagger-router-controller: stories
    get:
      description: Get draft story summary if one exists.
      tags:
        - story
      operationId: getDraftStory
      parameters:
        - name: key
          in: path
          description: story key
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StorySummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates summary information about a draft story.
      tags:
        - story
      operationId: updateStory
      parameters:
        - name: key
          in: path
          description: story key
          required: true
          type: string
        - name: story
          in: body
          description: Story summary
          required: true
          schema:
            $ref: '#/definitions/StorySummaryUpdate'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/stories/{key}/publish':
    x-swagger-router-controller: stories
    post:
      description: Get draft story summary if one exists.
      tags:
        - story
      operationId: publishDraft
      parameters:
        - name: key
          in: path
          description: story key
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StorySummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/stories/{key}/latest':
    x-swagger-router-controller: stories
    get:
      description: Get story summary for latest published version of story.
      tags:
        - story
      operationId: getLatestPublishedStory
      parameters:
        - name: key
          in: path
          description: story key
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Story"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/stories/{key}/{version}':
    x-swagger-router-controller: stories
    get:
      description: Get story summary.
      tags:
        - story
      operationId: getStoryByVersion
      parameters:
        - name: key
          in: path
          description: story key
          required: true
          type: string
        - name: version
          in: path
          description: version of story to get
          required: true
          type: string
#          format: int32
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/StorySummary"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/stories/{key}/{version}/full':
    x-swagger-router-controller: stories
    get:
      description: Get entire published story, including all chapters.  This is useful for backups and to avoid network "chattiness."
      tags:
        - story
      operationId: getEntireStory
      parameters:
        - name: key
          in: path
          description: story key
          required: true
          type: string
        - name: version
          in: path
          description: version of story to get
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Story"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/chapters/{storyKey}':
    x-swagger-router-controller: chapters
    post:
      description: Creates a draft chapter with given information.
      tags:
        - story
      operationId: createChapter
      parameters:
        - name: storyKey
          in: path
          description: story key
          required: true
          type: string
        - name: chapter
          in: body
          description: Chapter information
          required: true
          schema:
            $ref: '#/definitions/ChapterUpdate'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Chapter"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/chapters/{storyKey}/draft/{id}':
    x-swagger-router-controller: chapters
    get:
      description: Gets a draft chapter.
      tags:
        - story
      operationId: getDraftChapter
      parameters:
        - name: storyKey
          in: path
          description: story key
          required: true
          type: string
        - name: id
          in: path
          description: chapter ID
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Chapter"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates a draft chapter.
      tags:
        - story
      operationId: updateChapter
      parameters:
        - name: storyKey
          in: path
          description: story key
          required: true
          type: string
        - name: id
          in: path
          description: chapter ID
          required: true
          type: integer
          format: int32
        - name: chapter
          in: body
          description: Chapter information
          required: true
          schema:
            $ref: '#/definitions/ChapterUpdate'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/chapters/{storyKey}/draft/{id}/signpost':
    x-swagger-router-controller: chapters
    put:
      description: Updates signpost of draft chapter, adding, changing and removing as specified.
      tags:
        - story
      operationId: updateSignpost
      parameters:
        - name: storyKey
          in: path
          description: story key
          required: true
          type: string
        - name: id
          in: path
          description: chapter ID
          required: true
          type: integer
          format: int32
        - name: signs
          in: body
          description: signs to update or add
          required: true
          schema:
            $ref: '#/definitions/SignpostUpdate'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  '/chapters/{storyKey}/{version}/{id}':
    x-swagger-router-controller: chapters
    get:
      description: Retrieves chapter for specified story version.
      tags:
        - story
      operationId: getChapterByVersion
      parameters:
        - name: storyKey
          in: path
          description: story key
          required: true
          type: string
        - name: version
          in: path
          description: version of story to get
          required: true
          type: integer
          format: int32
        - name: id
          in: path
          description: chapter ID
          required: true
          type: integer
          format: int32
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Signpost"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /swagger:
    x-swagger-pipe: swagger_raw

definitions:
  ErrorResponse:
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
  Chapter:
    type: object
    properties:
      id:
        type: integer
        format: int32
      title:
        type: string
      prose:
        type: string
      signpost:
        type: array
        items:
          $ref: '#/definitions/ChapterSign'
  ChapterSign:
    type: object
    properties:
      destinationId:
        type: integer
        format: int32
      teaser:
        type: string
  ChapterUpdate:
    type: object
    properties:
      title:
        type: string
      prose:
        type: string
  # GeneralResponse could be extended to include hateos links
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  GetStoriesResponse:
    required:
      - stories
    properties:
      stories:
        type: array
        items:
          $ref: '#/definitions/StorySummary'
  Signpost:
    type: object
    properties:
      sourceChapterId:
        type: integer
        format: int32
      destinations:
        type: array
        items:
          $ref: '#/definitions/ChapterSign'
  SignpostUpdate:
    type: object
    properties:
      signs:
        type: array
        items:
          $ref: '#/definitions/ChapterSign'
      signsToRemove:
        type: array
        items:
          type: integer
          format: int32
  Status:
    type: object
    properties:
      statusCode:
        type: integer
        format: int32
      salutation:
        type: string
      version:
        type: string
  Story:
    type: object
    properties:
      summary:
        $ref: '#/definitions/StorySummary'
      chapters:
        type: array
        items:
          $ref: '#/definitions/Chapter'
  StorySummary:
    type: object
    properties:
      key:
        type: string
      version:
        type: integer
        format: int32
      title:
        type: string
      penName:
        type: string
      tagLine:
        type: string
      about:
        type: string
      firstChapter:
        type: integer
        format: int32
      publishedAt:
        type: string
        format: date-time
  StorySummaryUpdate:
    type: object
    properties:
      title:
        type: string
      penName:
        type: string
      tagLine:
        type: string
      about:
        type: string
      firstChapter:
        type: integer
        format: int32
